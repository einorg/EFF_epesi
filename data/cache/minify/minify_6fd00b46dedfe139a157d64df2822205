var objs = new Array();
var order = new Array();
var now = 0;
/*
 * possible states:
 *  -3 - uninitialized
 *  -2 - closed with buttons
 *  -1 - closed with text input
 *   1 - showed with text input
 *   2 - showed with buttons
 */
var state = {uninitialized: -3, closed: -1, showed: 1, buttons: 2};
var c2fstate = state.uninitialized;
var c2flabel = "";
var c2fmessage = "";

function initc2f(label, message) {
    includeCSS('modules/Utils/RecordBrowser/click2fill.css');
    objs = new Array();
    order = new Array();
    now = 0;
    c2fstate = state.uninitialized;
	c2flabel = label;
	c2fmessage = message;
}
function includeCSS(p_file) {
	var v_css  = document.createElement('link');
	v_css.rel = 'stylesheet'
	v_css.type = 'text/css';
	v_css.href = p_file;
	document.getElementsByTagName('head')[0].appendChild(v_css);
}
function changeSelection(x) {
    if(objs[x] == true) {
        document.getElementById('o'+x).innerHTML = '';
        document.getElementById(x).className = '';
        objs[x] = false;
    } else {
        document.getElementById('o'+x).innerHTML = now+1;
        document.getElementById(x).className = 'selected';
        objs[x] = true;
    }
}
function manipulateArray(x) {
    if(objs[x] == true) {
        var nr = document.getElementById('o'+x).innerHTML-1;
        order.splice(nr,1);
        for(var i = nr; i < order.length; i++) {
            document.getElementById('o'+order[i]).innerHTML = i+1;
        }
        now--;
        changeSelection(x);
    } else {
        order[now] = x;
        changeSelection(x);
        now++;
    }
}
function c2f() {
    if(c2fstate == state.uninitialized) {
        if(document.getElementById("c2fBox") == undefined) {
            alert("This template is not compatible with Click 2 Fill function");
            return;
        }
        document.getElementById("c2fBox").innerHTML = '<table><tr><td><textarea id="c2ftxt" rows="5" cols="100">'+c2fmessage+'</textarea><div id="c2fs"></div></td><td><input type="button" class="button" onclick="c2fScan()" value="'+c2flabel+'" style="margin:20px"/></td></tr></table>';
        c2fstate = state.closed;
        var el = document.getElementsByTagName("input");
        for(var i = 0; i < el.length; i++) {
            if(el[i].type == 'text') {
                var functxt = String(el[i].onclick);
                if(functxt.indexOf('c2fstate') != -1) continue;
                el[i].oldonclick = (el[i].onclick)?el[i].onclick:function(){};
                el[i].onclick = function () {
                    this.oldonclick();if(c2fstate == state.buttons && order.length > 0) this.value = copyText();
                };
            }
        }
        el = document.getElementsByTagName("textarea");
        for(i = 0; i < el.length; i++) {
            if(el[i].id != 'c2ftxt') {
                el[i].oldonclick = (el[i].onclick)?el[i].onclick:function(){};
                el[i].onclick = function() {
                    this.oldonclick();if(c2fstate == state.buttons && order.length > 0) this.innerHTML = copyText();
                };
            }
        }
    }
    if(c2fstate <= 0) { // state.closed or closed with buttons
        document.getElementById("c2fBox").style.display = 'block';
        var tmp = document.getElementById("c2ftxt");
        tmp.focus();
        tmp.select();
        c2fstate = -c2fstate;
    } else { // state.showed
        document.getElementById("c2fBox").style.display = 'none';
        c2fstate = -c2fstate;
    }
}
function c2fScan() {
    if(c2fstate == state.showed) {
        var words = document.getElementById("c2ftxt").value.split(new RegExp("[, \n\t]"));
        document.getElementById("c2fs").innerHTML = '';
        for(var i = 0; i < words.length; i++) {
            if(words[i].length == 0) continue;
            var id = 'c2f'+i;
            document.getElementById("c2fs").innerHTML += '<div id="'+id+'" onclick="manipulateArray(\''+id+'\')">'+words[i]+'</div><span id="o'+id+'"></span>';
            objs[id] = false;
        }
        document.getElementById("c2fs").style.display = 'block';
        document.getElementById("c2ftxt").style.display = 'none';
        c2fstate = state.buttons;
        now = 0;
        order = new Array();
    } else {
        var tmp = document.getElementById("c2ftxt");
        tmp.style.display = 'block';
        tmp.focus();
        tmp.select();
        document.getElementById("c2fs").style.display = 'none';
        c2fstate = state.showed;
    }
}
function copyText() {
    var arr = new Array();
    for(var i = 0; i < order.length; i++) {
        arr[i] = document.getElementById(order[i]).innerHTML;
        changeSelection(order[i]);
    }
    order = new Array();
    now = 0;
    return(arr.join(' '));
}
;CRM_PhoneCall__form_control = {
	form_id: '',
	init: function (form_name, other_phone_default_checked, other_customer_default_checked) {
		CRM_PhoneCall__form_control.form_id = '#'+form_name;
		jq('#other_phone').change(CRM_PhoneCall__form_control.onchange_other_phone);
		jq('#other_customer').change(CRM_PhoneCall__form_control.onchange_other_customer);
		CRM_PhoneCall__form_control.toggle_phone(other_phone_default_checked || CRM_PhoneCall__form_control.is_checked('#other_phone'));
		CRM_PhoneCall__form_control.toggle_customer(other_customer_default_checked || CRM_PhoneCall__form_control.is_checked('#other_customer'));
	},
	onchange_other_phone: function () {
		CRM_PhoneCall__form_control.toggle_phone(CRM_PhoneCall__form_control.is_checked('#other_phone'));
	},
	onchange_other_customer: function () {
		CRM_PhoneCall__form_control.toggle_customer(CRM_PhoneCall__form_control.is_checked('#other_customer'));
	},
	toggle_phone: function (other_phone_is_checked)	{
		CRM_PhoneCall__form_control.toggle_element('#phone', other_phone_is_checked);
		CRM_PhoneCall__form_control.toggle_element('#other_phone_number', !other_phone_is_checked);
	},
	toggle_customer: function (other_customer_is_checked)	{
		CRM_PhoneCall__form_control.toggle_element('#customer, #__autocomplete_id_customer__search, #other_phone', other_customer_is_checked);
		CRM_PhoneCall__form_control.toggle_element('#other_customer_name', !other_customer_is_checked);
		if (other_customer_is_checked) {
			jq('#other_phone', CRM_PhoneCall__form_control.form_id).prop('checked', true);
			CRM_PhoneCall__form_control.toggle_phone(true);
		}
	},
	is_checked: function (element_id) {
		return jq(element_id, CRM_PhoneCall__form_control.form_id).is(':checked');
	},
	toggle_element: function (element_selector, disabled) {
		jq(element_selector, CRM_PhoneCall__form_control.form_id).prop('disabled', disabled);
	}
}

;var ChainedSelect = Class.create();
ChainedSelect.prototype = {
	prev_ids:null,
	dest_id:null,
	params:null,
	default_val:null,
	request_f:null,
	clear_f:null,
	load_def_f:null,
	stop_f:null,
	loads:0,
	initialize:function(dest_id,prev_ids,params,def_val) {
		var dest = $(dest_id);
		if(dest==null)return;
		this.prev_ids = prev_ids;
		this.dest_id = dest_id;
		this.params = params;
		this.default_val = def_val;
		var prev_obj = prev_ids[prev_ids.length-1];
		this.request_f = this.request.bindAsEventListener(this);
		this.clear_f = this.clear.bindAsEventListener(this);
		Event.observe(prev_obj,'change',this.request_f);
		Event.observe(prev_obj,'e_cs:load',this.request_f);
		Event.observe(prev_obj,'e_cs:clear',this.clear_f);
		this.stop_f = this.stop.bindAsEventListener(this);
		Event.observe(document,'e:load',this.stop_f);
		if(prev_ids.length==1) {
			this.load_def_f = this.load_def.bindAsEventListener(this);
			Event.observe(document,'e:load',this.load_def_f);
		}
	},
	load_def:function() {
		this.request();
	},
	clear:function(){
		obj.options.length=0;
		obj.fire('e_cs:clear');
	},
	stop:function(){
		this.loads++;
		if(this.loads==2) {
			var prev_obj = this.prev_ids[this.prev_ids.length-1];
			if($(prev_obj)!=null) {
				Event.stopObserving(prev_obj,'change',this.request_f);
				Event.stopObserving(prev_obj,'e_cs:load',this.request_f);
				Event.stopObserving(prev_obj,'e_cs:clear',this.clear_f);
			}
			if(this.prev_ids.length==1)
				Event.stopObserving(document,'e:load',this.load_def_f);
			Event.stopObserving(document,'e:load',this.stop_f);
		}
	},
	request:function() {
		var vals = new Hash();
		if(this.default_val!=null) {
			var def_val = this.default_val;
			this.default_val = null;
		}
		for(x in this.prev_ids) {
			var p = $(this.prev_ids[x]);
			if(p==null) return;
			vals.set(this.prev_ids[x],p.value);
		}
		var dest_id = this.dest_id;
		new Ajax.Request('modules/Utils/ChainedSelect/req.php', {
			method: 'post',
			parameters:{
				values:Object.toJSON(vals),
				dest_id:dest_id,
				parameters:Object.toJSON(this.params),
				defaults:Object.toJSON(def_val),
				cid: Epesi.client_id
			},
			onSuccess:function(t) {
				var new_opts = t.responseText.evalJSON();
				var obj = $(dest_id);
				var opts = obj.options;
                if(new_opts == false) {
                    obj.setAttribute("oldDisplayValue", obj.style.display);
                //    obj.style.display = "none";
                    return;
                } else {
                 //   var val = obj.getAttribute("oldDisplayValue");
                 //   if(val != undefined)
                        obj.style.display = "block";
                }
				while(opts.length > 0) obj.remove(0);
				if(new_opts.length==0) {
					obj.fire('e_cs:clear');
                    obj.disabled = true;
				} else {
                    obj.disabled = false;
					if(Object.isArray(new_opts)) {
						for(y=0; y<new_opts.length; y++) {
							if(typeof new_opts[y].key != "undefined" && typeof new_opts[y].caption != "undefined")
								opts[opts.length] = new Option(new_opts[y].caption,new_opts[y].key);
							else
								opts[opts.length] = new Option(new_opts[y],y);
						}
					} else {
						for(y in new_opts) {
							opts[opts.length] = new Option(new_opts[y],y);
						}
					}
					if(typeof def_val != 'undefined')
						obj.value = def_val;
					else
						obj.value = '';
					jq(obj).change();
					setTimeout(obj.fire.bind(obj,'e_cs:load'),1);
				}
			}
		});
	}
};
;ms_remove_selected = function(myName, list_sep){
	var tolist = document.getElementsByName(myName+"to[]")[0];
	var fromlist = document.getElementsByName(myName+"from[]")[0];
	var list_result = "";
	var k = 0;
	var i = 0;
	while (k!=tolist.options.length) {
		if (tolist.options[k].selected) {
			while (i!=fromlist.options.length && fromlist.options[i].value<tolist.options[k].value) 
				i++;
			jj = fromlist.length;
			fromlist.options[jj] = new Option();
			for( j = jj; j > i; j-- ) {
				fromlist.options[j].text = fromlist.options[j-1].text;
				fromlist.options[j].value = fromlist.options[j-1].value;
			}
			fromlist.options[i].value = tolist.options[k].value;
			fromlist.options[i].text = tolist.options[k].text;
		} else {
			list_result += list_sep+tolist.options[k].value;
		}
		k++;
	}
	for(i = (tolist.length-1); i >= 0; i--) {
		if(tolist.options[i].selected == true) {
			tolist.options[i] = null;
		}
	}
	document.getElementsByName(myName)[0].value=list_result;
};

ms_add_selected = function(myName, list_sep){ 
	var tolist = document.getElementsByName(myName+"to[]")[0];
	var fromlist = document.getElementsByName(myName+"from[]")[0];
	var list_result = "";
	var k = 0;
	var i = 0;
	while (k!=fromlist.length) {
		if (fromlist.options[k].selected) {
			while(i < tolist.length && tolist.options[i].value<fromlist.options[k].value) 
				i++;
			jj = tolist.length;
			tolist.options[jj] = new Option();
			for( j = jj; j > i; j-- ) {
				tolist.options[j].value = tolist.options[j-1].value;
				tolist.options[j].text = tolist.options[j-1].text;
			}
			tolist.options[i].value = fromlist.options[k].value;
			tolist.options[i].text = fromlist.options[k].text;
		}
		k++;
	}
	for(i = (fromlist.length-1); i >= 0; i--) {
		if(fromlist.options[i].selected == true) {
			fromlist.options[i] = null;
		}
	}
	k = 0;
	while (k!=tolist.length) { 
		list_result += list_sep+tolist.options[k].value; 
		k++; 
	}
	document.getElementsByName(myName)[0].value=list_result; 
};

ms_remove_all = function(myName, list_sep){ 
	var tolist = document.getElementsByName(myName+"to[]")[0];
	var fromlist = document.getElementsByName(myName+"from[]")[0];
	var list_result = "";
	var k = 0;
	var i = 0;
	while (k!=tolist.options.length) {
		if (tolist.options[k].disabled) {
			k++;
			continue;
		}
		while (i!=fromlist.options.length && fromlist.options[i].value<tolist.options[k].value) 
			i++;
		jj = fromlist.length;
		fromlist.options[jj] = new Option();
		for( j = jj; j > i; j-- ) {
			fromlist.options[j].text = fromlist.options[j-1].text;
			fromlist.options[j].value = fromlist.options[j-1].value;
		}
		fromlist.options[i].value = tolist.options[k].value;
		fromlist.options[i].text = tolist.options[k].text;
		k++;
	}
	for(i = (tolist.length-1); i >= 0; i--) {
		if (!tolist.options[i].disabled) tolist.options[i] = null;
	}
	document.getElementsByName(myName)[0].value=list_result;
};

ms_add_all = function(myName, list_sep){ 
	var tolist = document.getElementsByName(myName+"to[]")[0];
	var fromlist = document.getElementsByName(myName+"from[]")[0];
	var k = 0;
	var i = 0;
	var list_result = "";
	while (k!=fromlist.length) {
		if (fromlist.options[k].disabled) {
			k++;
			continue;
		}
		while(i < tolist.length && tolist.options[i].value<fromlist.options[k].value) 
			i++;
		jj = tolist.length;
		tolist.options[jj] = new Option();
		for( j = jj; j > i; j-- ) {
			tolist.options[j].value = tolist.options[j-1].value;
			tolist.options[j].text = tolist.options[j-1].text;
		}
		tolist.options[i].value = fromlist.options[k].value;
		tolist.options[i].text = fromlist.options[k].text;
		k++;
	}
	for(i = (fromlist.length-1); i >= 0; i--) {
		if (!fromlist.options[i].disabled) fromlist.options[i] = null;
	}
	k = 0;
	while (k!=tolist.length) { 
		list_result += list_sep+tolist.options[k].value; 
		k++; 
	}
	document.getElementsByName(myName)[0].value=list_result; 
};
