var RecordPicker_select_all = function(select,path,message) {
	Epesi.updateIndicatorText(message);
	Epesi.procOn++;
	Epesi.updateIndicator();
	new Ajax.Request('modules/Utils/RecordBrowser/RecordPicker/select_all.php', {
		method: 'post',
		parameters:{
			select: Object.toJSON(select),
			path: Object.toJSON(path),
			cid: Epesi.client_id
		},
		onSuccess:function(t) {
			eval(t.responseText);
		}
	});
}

;rpicker_init = function(element, id){
	var checkbox = $('leightbox_rpicker_'+element+'_'+id);
	var list = document.getElementsByName(element+'to[]')[0];
	if (!list)
		list = $(element);
	var k = 0;
	checkbox.checked = false;
	if(list) while (k!=list.length) {
		if (list.options[k].value == id) {
			checkbox.checked = true;
			break;
		}
		k++;
	}
	checkbox.observe('click', function(e){
		rpicker_move(element,id,checkbox.getAttribute('formated_name'));
	});
}

rpicker_move = function(element, id, cstring, where){
	var checkbox = $('leightbox_rpicker_'+element+'_'+id);
	if (typeof(where)=="undefined")
		where = checkbox.checked;
	else if (checkbox)
		checkbox.checked = where;
	var tolist = document.getElementsByName(element+'to[]')[0];
	var fromlist = document.getElementsByName(element+'from[]')[0];
	if (!tolist) {
		var list = $(element);
		if (where) {
			automulti_add_value(element, '__SEP__', id, cstring);
		} else {
			var k = 0;
			while (k!=list.length) {
				if (list.options[k].value == id) {
					x = 0;
					while (x!=list.length) list.options[x].selected = (k==x++);
					automulti_remove_button_action(element, '__SEP__');
					return;
				}
				k++;
			}
		}
	} else {
		if (where) {
			k = 0;
			i = false;
			while (k!=fromlist.length) {
				fromlist.options[k].selected = false;
				if (fromlist.options[k].value == id) {
					fromlist.options[k].selected = true;
					i = true;
					break;
				}
				k++;
			}
			if (!i) {
				k = 0;
				while (k!=tolist.length) {
					if (tolist.options[k].value == id) {
						return;
					}
					k++;
				}
				fromlist.options[k] = new Option();
				fromlist.options[k].selected = true;
				fromlist.options[k].text = cstring;
				fromlist.options[k].value = id;
			}
			eval('add_selected_'+element+'()');
		} else {
			k = 0;
			while (k!=tolist.length) {
				if (tolist.options[k].value == id) {
					x = 0;
					while (x!=tolist.length) tolist.options[x].selected = (k==x++);
					eval('remove_selected_'+element+'()');
					return;
				}
				k++;
			}
		}
	}
}

rpicker_chained = function(element) {
	jq('[rel="rpicker_leightbox_'+element+'"]').click(function(){	
		jq('#'+element+'__chained_vals')
			.val(jq('#'+element).closest('form').serialize())
			.closest('form').submit();
	});
}


;ms_remove_selected = function(myName, list_sep){
	var tolist = document.getElementsByName(myName+"to[]")[0];
	var fromlist = document.getElementsByName(myName+"from[]")[0];
	var list_result = "";
	var k = 0;
	var i = 0;
	while (k!=tolist.options.length) {
		if (tolist.options[k].selected) {
			while (i!=fromlist.options.length && fromlist.options[i].value<tolist.options[k].value) 
				i++;
			jj = fromlist.length;
			fromlist.options[jj] = new Option();
			for( j = jj; j > i; j-- ) {
				fromlist.options[j].text = fromlist.options[j-1].text;
				fromlist.options[j].value = fromlist.options[j-1].value;
			}
			fromlist.options[i].value = tolist.options[k].value;
			fromlist.options[i].text = tolist.options[k].text;
		} else {
			list_result += list_sep+tolist.options[k].value;
		}
		k++;
	}
	for(i = (tolist.length-1); i >= 0; i--) {
		if(tolist.options[i].selected == true) {
			tolist.options[i] = null;
		}
	}
	document.getElementsByName(myName)[0].value=list_result;
};

ms_add_selected = function(myName, list_sep){ 
	var tolist = document.getElementsByName(myName+"to[]")[0];
	var fromlist = document.getElementsByName(myName+"from[]")[0];
	var list_result = "";
	var k = 0;
	var i = 0;
	while (k!=fromlist.length) {
		if (fromlist.options[k].selected) {
			while(i < tolist.length && tolist.options[i].value<fromlist.options[k].value) 
				i++;
			jj = tolist.length;
			tolist.options[jj] = new Option();
			for( j = jj; j > i; j-- ) {
				tolist.options[j].value = tolist.options[j-1].value;
				tolist.options[j].text = tolist.options[j-1].text;
			}
			tolist.options[i].value = fromlist.options[k].value;
			tolist.options[i].text = fromlist.options[k].text;
		}
		k++;
	}
	for(i = (fromlist.length-1); i >= 0; i--) {
		if(fromlist.options[i].selected == true) {
			fromlist.options[i] = null;
		}
	}
	k = 0;
	while (k!=tolist.length) { 
		list_result += list_sep+tolist.options[k].value; 
		k++; 
	}
	document.getElementsByName(myName)[0].value=list_result; 
};

ms_remove_all = function(myName, list_sep){ 
	var tolist = document.getElementsByName(myName+"to[]")[0];
	var fromlist = document.getElementsByName(myName+"from[]")[0];
	var list_result = "";
	var k = 0;
	var i = 0;
	while (k!=tolist.options.length) {
		if (tolist.options[k].disabled) {
			k++;
			continue;
		}
		while (i!=fromlist.options.length && fromlist.options[i].value<tolist.options[k].value) 
			i++;
		jj = fromlist.length;
		fromlist.options[jj] = new Option();
		for( j = jj; j > i; j-- ) {
			fromlist.options[j].text = fromlist.options[j-1].text;
			fromlist.options[j].value = fromlist.options[j-1].value;
		}
		fromlist.options[i].value = tolist.options[k].value;
		fromlist.options[i].text = tolist.options[k].text;
		k++;
	}
	for(i = (tolist.length-1); i >= 0; i--) {
		if (!tolist.options[i].disabled) tolist.options[i] = null;
	}
	document.getElementsByName(myName)[0].value=list_result;
};

ms_add_all = function(myName, list_sep){ 
	var tolist = document.getElementsByName(myName+"to[]")[0];
	var fromlist = document.getElementsByName(myName+"from[]")[0];
	var k = 0;
	var i = 0;
	var list_result = "";
	while (k!=fromlist.length) {
		if (fromlist.options[k].disabled) {
			k++;
			continue;
		}
		while(i < tolist.length && tolist.options[i].value<fromlist.options[k].value) 
			i++;
		jj = tolist.length;
		tolist.options[jj] = new Option();
		for( j = jj; j > i; j-- ) {
			tolist.options[j].value = tolist.options[j-1].value;
			tolist.options[j].text = tolist.options[j-1].text;
		}
		tolist.options[i].value = fromlist.options[k].value;
		tolist.options[i].text = fromlist.options[k].text;
		k++;
	}
	for(i = (fromlist.length-1); i >= 0; i--) {
		if (!fromlist.options[i].disabled) fromlist.options[i] = null;
	}
	k = 0;
	while (k!=tolist.length) { 
		list_result += list_sep+tolist.options[k].value; 
		k++; 
	}
	document.getElementsByName(myName)[0].value=list_result; 
};

;automulti_remove_button_update = function (element) {
	list = document.getElementsByName(element+"__display")[0];
	i = 0;
	while (i!=list.options.length) {
		if (list.options[i].selected) {
			$("automulti_button_style_"+element).setAttribute("class","button enabled");
			break;
		}
		i++;
	}
	if (i==list.options.length) $("automulti_button_style_"+element).setAttribute("class","button disabled");
}

automulti_remove_button_action = function (element, list_sep) {
	list = document.getElementsByName(element+"__display")[0];
	val_holder = $(element+'__var_holder');
	i = 0;
	val_holder.value = "";
	while (i!=list.options.length) {
		if (list.options[i].selected) {
			list.options[i] = null;
		} else {
			val_holder.value += list_sep;
			val_holder.value += list.options[i].value;
			i++;
		}
	}
	automulti_remove_button_update(element);
}

automulti_on_hide = function (element, list_sep) {
	var new_value=$("__autocomplete_id_"+element+"__search").value.split('__');
	if (new_value && typeof(new_value[1])!="undefined") {
		$("__autocomplete_id_"+element+"__search").value="";
		automulti_add_value(element, list_sep, new_value[0], new_value[1]);
	}
}

automulti_add_value = function (element, list_sep, value, label) {
	list = document.getElementsByName(element+"__display")[0];
	i = 0;
	while (i!=list.options.length) {
		if (list.options[i].value==value) {
			value=null;
			break;
		}
		i++;
	}
	if (value!=null) {
		list.options[i] = new Option();
		list.options[i].value = value;
		list.options[i].text = label;
		if(typeof iphone != "undefined") list.options[i].selected = true;
		val_holder = $(element+'__var_holder');
		val_holder.value = val_holder.value + list_sep + value;
	}
}
